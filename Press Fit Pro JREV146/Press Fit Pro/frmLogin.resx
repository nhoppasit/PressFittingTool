<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="picQuit.Locked" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="picQuit.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        R0lGODlhIAAgAIcAAP///zExMTk5OSkpKUlJSUFBQSIiIjYzOFJSUpCQkElJQjg6M7KysnBwcJmZmYCA
        gLm5uTlAKGlpaTlAMampqTg3Onh4eDAvMzc7OTxGOUJRKElHSkFJOImJiTAwL0JESkNIRKGhoTk5QdnZ
        2dHR0VhYWFBOUcDAwEFKLUdITT9KK2JiYuLi4j1JMsrKykBBOzg3NrDJfU5NSkBDMj1IPDY7NrPJgmp6
        TkBKMHiRS4KRYV9qRVppP0tbLEtIPU5UOlBjMk1iLn2UUGyATpeXl6a9d5Whdo+fX7nRirvRkL3Wka3C
        gk1KT7bOjj1FSCgpJT5BQzc7QT9QKy4uMXyLW3eRSnmMUHeIV93d3YqdYYaZcYWbXYmQb3eAVmVrUWB1
        RFxwQTtMI1VVVXOGTHmOTmZmZmZ5R2VxUZKpW6nAd7fTfam9f5+3cKC5drnQhrzVhbjPkLzVi7LMgZWs
        Y5SpbpOlbZmwWo+lZ5uubpGocr/SnMPYk5atbl93NlNhOmF1PkhGQEZFTlFnLUVSMkZcKEpZMUhgJ1Fe
        OAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        ACH/C05FVFNDQVBFMi4wAwEBAAAh+QQBAACIACwAAAAAIAAgAAAI/wARCRxI8ESCBw8SOAhBIUSCEAwI
        Spw4kIKEBg0uYrTQ4SEECCEcUBy5AgGBAgUEpCyAoISEhCEguHAQcaRABgJyBjhQIaeADAUIMEGwgiOF
        Eww62KQQoGkAAQd8CoAy48MGGTIQlHlAE8IDiiec7sQQNWeGCSgKbCBAwETLBgkYUFAqUYBTqGR9Zjhj
        hEMBBQRMIkAAl0FcghYGiMUg9cWEK01wgOCQgq3bEoUlDHSh+G7jFzPI2EBBgwYIwCZSi4HrQCSixGJh
        LMgZoYeOG1ViBNHyRQMHtgSylrDgQDMLu2J9zgAjx8afHDEM5VGyZVCKFKhlrHhg4cSJAZ0DwP8Q4NhP
        kjuFUOSwoUGKGT06cHAADHxFB67gPQuYgaeNhslUwPEDDSrcsAcPE4DwAWAsPSBBYuH5BIQbfXCwoBdc
        KJACBxqkkYUKBXyAkkoNICBBfk/lNMENavSQQiAKKOADWyCgcMQaETgBxQsZ9FQCARIYEKEAEwxhAyFO
        EODDWkxsoAAOQiyhgggiTACVAAgUYIGQnmWwQxxB0LAgYBtsUAAKc7ChQhQ+7RRYAlw2BUMFGWgQQw4t
        qLXBBwRMdggSY0SQgVQBFCABBeB15lMEViDBQwsKfgBCCxoYsYQGE8xWAQZNCdCBCwIIeUFTPS2AAh1N
        DKFBCypIAQQfSez4MAFjFVQQQA07QTBCA0J2NqcIC4QhxBsx2IFGEUoUIUgEVNpla1MEIMICAwP02lRZ
        GUTwQxdH1KHDDi1E4NMCOzXlQQICkRAkeKPulNMCC0Qgb6Y1MMZpuU0VMBALEISK4gEBwDubACJgwKYI
        T4kVwAAUEDSCAxf0Gh4MKWJALnL4LvyVRCR04IHECjeFK64KD2DBSC4kEIABT4DnQbtOXSCzYgN44MHG
        I5EQAgIGsJzoFC9fQLMH4BXgmk2IkABBB4D0nOjTiQrwgAtIE8QCCQwQsUIBRDs9RQYlJABB1RRdfQIE
        DSVAhAMUQEDCCGRXjcUIdMMdd0AAOw==
</value>
  </data>
  <metadata name="btnLogin.Locked" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="txtPass.Locked" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="txtUser.Locked" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="label4.Locked" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="label3.Locked" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="label2.Locked" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="pnInput.Locked" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="$this.Locked" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
</root>